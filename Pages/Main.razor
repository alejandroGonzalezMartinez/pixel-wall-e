@page "/"
@using pixel_wall_e.Compiler
@using pixel_wall_e.Models
@using pixel_wall_e.Components

<PageTitle>Pixel Wall E</PageTitle>

<h1>Pixel Wall E</h1>

<div class="editor-area">
    <h3>Código</h3>
    <textarea @bind="userCode" rows="15" cols="60" placeholder="Escribe tu código aquí..."></textarea>
    <br />
    <button @onclick="RunCode">Ejecutar</button>
</div>

<div class="canvas-area">
    <h3>Canvas</h3>
    <PixelCanvas @ref="canvasRef" Width="32" Height="32" />
</div>

<div class="console-area">
    <h3>Salida</h3>
    <pre>@consoleOutput</pre>
</div>

@code {
    private string userCode = @"
        Spawn(0, 0)
        Color(""Black"")
        n <- 5
        k <- 3 + 3 * 10
        n <- k * 2
        actual_x <- GetActualX()
        i <- 0
        loop1
        DrawLine(1, 0, 1)
        i <- i + 1
        GoTo [loop1] (i < 10)
        Color(""Blue"")
        GoTo [loop1] (1 == 1)
        loop_ends_here";

    private string consoleOutput = "";
    private PixelCanvas? canvasRef;

    private void RunCode()
    {
        try
        {
            var scanner = new Scanner(userCode);
            var tokens = scanner.ScanTokens();

            var parser = new Parser(tokens);
            var statements = parser.Parse();

            Interpreter.Interpret(statements);

            consoleOutput = "Ejecución finalizada correctamente.";
        }
        catch (Exception ex)
        {
            consoleOutput = $"[ERROR]: {ex.Message}";
        }
    }
}